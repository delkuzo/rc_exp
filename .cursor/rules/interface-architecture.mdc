---
description: Принципы архитектуры интерфейсов проекта RC Experiment
alwaysApply: true
---

# Принципы архитектуры интерфейсов

## Обязательные правила работы

### 1. Чтение правил проекта
**Обязательно читать все правила проекта каждый раз перед планированием любых действий.**

Это критически важно для:
- Удержания контекста проекта
- Направления работы в правильном направлении
- Соблюдения установленных инструкций
- Избежания действий, не соответствующих архитектуре проекта

**Основные принципы работы:**
- **Делай то, что просит автор** - строго следовать запросам
- **Консультация перед изменениями** - если хочешь сделать что-то за пределами просьбы, обязательно посоветуйся с автором перед внесением больших изменений

### 2. Базовые компоненты интерфейса

**В основе любого интерфейса лежат четыре фундаментальных компонента:**

#### 2.1 Цветовая палитра
- Система токенов цвета для светлой и темной темы
- Каждый цветовой токен имеет версию для обеих тем
- Основа для создания визуальной иерархии

#### 2.2 Система размеров и отступов
- Унифицированная система отступов
- Стандартизированные размеры элементов
- Обеспечивает консистентность layout'а

#### 2.3 Типографика
- Система шрифтов и их стилей
- Иерархия текстовых элементов
- Определяет читаемость и визуальную структуру

#### 2.4 SVG иконки
- Векторные иконки для улучшения UX
- Масштабируемые и адаптивные
- Дополняют текстовый контент

**Эти четыре компонента являются строительными блоками для всех элементов интерфейса.**

### 3. Компоненты/Контроллы

**Компоненты (контроллы) - это следующий уровень в иерархии интерфейса:**

#### 3.1 Определение
Компоненты создаются путем комбинирования базовых компонентов (цвета, отступы, типографика, иконки) в функциональные элементы интерфейса. **Все необходимые компоненты создаются в UI-ките и берутся из Figma - не придумывать новые компоненты.**

#### 3.2 Источник компонентов
- **UI-кит в Figma** - все компоненты уже созданы автором
- **Готовые макеты** - компоненты берутся из существующих Figma файлов
- **Не изобретать** - использовать только те компоненты, которые есть в дизайн-системе

#### 3.3 Типы компонентов
- **Select** - выпадающий список
- **Input** - поле ввода
- **CheckBox** - чекбокс
- **Radio Button** - радиокнопка
- **Toggle** - переключатель
- **Tab** - вкладка
- И другие интерактивные элементы

**Компоненты являются переиспользуемыми элементами, созданными на основе базовых компонентов дизайн-системы.**

### 4. UI-кит проекта

**Базовые компоненты и компоненты/контроллы живут в UI-ките проекта:**

#### 4.1 Расположение
- **UI-кит** - все базовые компоненты и контроллы находятся в UI-ките
- **Демо-страница** - UI-кит отображается в разделе "UI-kit" на демо-странице

#### 4.2 Цель UI-кита
- Создание полной библиотеки компонентов
- Демонстрация всех возможностей дизайн-системы
- Основа для создания экспериментов и интерфейсов

**UI-кит является фундаментом для всей дальнейшей работы - экспериментов и интерфейсов.**

### 5. Эксперименты

**Эксперименты - это следующий уровень в иерархии интерфейса:**

#### 5.1 Определение
Эксперименты представляют собой идеальные связки компонентов/контролов, доведенные до совершенства.

#### 5.2 Создание экспериментов
- Комбинирование готовых компонентов из UI-кита
- Доведение до идеального состояния
- Правильные отступы и размеры
- Адаптивность для desktop и мобильных версий

#### 5.3 Примеры экспериментов
- **Текст + заголовок** - идеальная типографическая связка
- **Текст + кнопка** - контент с призывом к действию
- **Input + кнопка** - форма ввода с действием
- **Группа контролов** - связанные элементы интерфейса

#### 5.4 Цель экспериментов
Создание библиотеки эталонных интерфейсных решений для последующего использования в больших интерфейсах.

**Эксперименты являются переиспользуемыми интерфейсными фрагментами, созданными из компонентов UI-кита.**

### 6. Интерфейсы

**Интерфейсы - это основная задача проекта RC Experiment:**

#### 6.1 Определение
Интерфейсы создаются путем комбинирования готового UI-кита (цвета, типографика, контролы, иконки, тени, отступы) и навыков, приобретенных при создании экспериментов.

#### 6.2 Принцип создания
- Использование готового UI-кита из Figma
- Применение навыков правильного комбинирования элементов
- Создание полноценных интерфейсов на основе текстовых запросов

#### 6.3 Масштаб задачи
Интерфейсы представляют собой полноценные страницы или экраны с множественной функциональностью:

**Системы управления:**
- Управление пользователями с ролями и правами доступа
- Системы фильтрации и поиска
- Множественные формы с валидацией
- Интерактивные таблицы с действиями

**Финансовые интерфейсы:**
- Кабинеты пользователей с балансом и транзакциями
- Системы покупки и оплаты услуг
- Каталоги услуг с ценами и описаниями
- История транзакций и финансовые отчеты

**Интерактивные элементы:**
- Системы навигации и хлебных крошек
- Множественные формы с валидацией
- Адаптивные интерфейсы для различных устройств

#### 6.4 Примеры сложности
- Управление пользователями с ролями и правами доступа
- Кабинеты пользователей с финансовыми операциями
- Системы покупки и оплаты услуг баллами
- Каталоги услуг с фильтрацией и поиском
- История транзакций с детализацией

**Интерфейсы являются конечной целью проекта - создание качественных пользовательских интерфейсов по запросу.**